<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://xmlns.jcp.org/xml/ns/javaee" xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd" id="WebApp_ID" version="3.1">
  <display-name>springmvc_mybatis</display-name>
  
  	<!-- post乱码过滤器 -->
	<filter>
		<filter-name>CharacterEncodingFilter</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>utf-8</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>CharacterEncodingFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
  
  	<!-- 加载spring容器 -->
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>/WEB-INF/classes/spring/applicationContext-*.xml</param-value>
	</context-param>
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>
  
  <!-- springmvc前端控制器 -->
<servlet>
	<servlet-name>springmvc</servlet-name>
	<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
	<!-- contextConfigLocation配置spring加载的配置文件（配置处理器映射器、适配器等）
	如果不配置contextConfigLocation，默认加载/WEB-INF/DispatcherServlet名称-servlet.xml
	 -->
	<init-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>classpath:spring/springmvc.xml</param-value>
	</init-param>
</servlet>

<servlet-mapping>
	<servlet-name>springmvc</servlet-name>
	<!-- 
	第一种：*.action，访问以.action结尾由DispatcherServlet进行解析
	第二种：/，所有访问的地址都由DispatcherServlet进行解析，对于jsp页面直接由tomcat解析，DispatcherServlet不解析jsp地址；
	但对于静态文件的解析需要配置不让DispatcherServlet进行解析
	使用此种方式可以实现RESTful风格的url
	第三种：/*，这样配置不对，使用这种配置，当请求到一个jsp页面时，仍然会由DispatcherServlet解析jsp地址，不能根据jsp页面找到Handler，会报错
	 -->
	<url-pattern>*.action</url-pattern>
</servlet-mapping>
  
    <!-- springmvc前端控制器 ,RESTful前端控制器-->
<servlet>
	<servlet-name>springmvc_rest</servlet-name>
	<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
	<!-- contextConfigLocation配置spring加载的配置文件（配置处理器映射器、适配器等）
	如果不配置contextConfigLocation，默认加载/WEB-INF/DispatcherServlet名称-servlet.xml
	 -->
	<init-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>classpath:spring/springmvc.xml</param-value>
	</init-param>
</servlet>

<servlet-mapping>
	<servlet-name>springmvc_rest</servlet-name>
	<!-- 
	第一种：*.action，访问以.action结尾由DispatcherServlet进行解析
	第二种：/，所有访问的地址都由DispatcherServlet进行解析，对于jsp页面直接由tomcat解析，DispatcherServlet不解析jsp地址；
	但对于静态资源文件的解析需要配置不让DispatcherServlet进行解析
	使用此种方式可以实现RESTful风格的url
	第三种：/*，这样配置不对，使用这种配置，请求到一个jsp页面时，仍然会由DispatcherServlet解析jsp地址，不能根据jsp页面找到Handler，会报错
	 -->
	<url-pattern>/</url-pattern>
</servlet-mapping>
  
  
  <welcome-file-list>
    <welcome-file>index.html</welcome-file>
    <welcome-file>index.htm</welcome-file>
    <welcome-file>index.jsp</welcome-file>
    <welcome-file>default.html</welcome-file>
    <welcome-file>default.htm</welcome-file>
    <welcome-file>default.jsp</welcome-file>
  </welcome-file-list>
</web-app>